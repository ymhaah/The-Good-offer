@use "./colors.scss" as *;
@use "./typography.scss" as *;
@use "../util/index" as *;

// @include flex(r, c, c);
// @include flexForPhon(Hero, cr);
// @include grid(2, 2, fr, 1rem);

:root {
    --border-radius: #{toRem(25px)};
}
*,
*::before,
*::after {
    box-sizing: border-box;
}
html,
html:focus-within {
    scroll-behavior: smooth;
}
body {
    margin: 0;
    padding: 0;
    overscroll-behavior: contain;
}
html,
body {
    height: 100%;
    max-width: 100%;
    overflow-x: clip;
}
// .Container {
//     --container-width: 50%;
//     height: 100%;
//     width: var(--container-width, 90%);
//     margin-inline: auto;
// }
li,
ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
    a {
        text-decoration: none;
    }
}
::-moz-focus-inner {
    border: none;
}
:focus {
    outline: 2px solid transparent;
}
.focus {
    box-shadow: 0 0 0 -0.5rem var(--background-clr),
        0 0 0 -0.7rem var(--accent-clr);
    transition: box-shadow 400ms cubic-bezier(0.66, -0.2, 0.27, 1.15);
}
.focus:focus-visible {
    outline: 2px solid transparent;
    box-shadow: 0 0 0 0.25rem var(--background-clr),
        0 0 0 0.5rem var(--accent-clr);
}
input,
button,
textarea,
a,
select {
    font: inherit;
}
img,
svg {
    max-width: 100%;
    height: auto;
    vertical-align: middle;
    font-style: italic;
    font-weight: var(--fw-bold);
    background-repeat: no-repeat;
    background-size: cover;
    shape-margin: 0.75rem;
    user-select: none;
    object-fit: cover;
    object-position: center;
    box-shadow: none;
    pointer-events: none;
    isolation: isolate;
}
[type="button"] {
    user-select: none;
    overflow: hidden;
    cursor: pointer;
    text-decoration: none;
    appearance: button;
    font: inherit;
}
:where(.Button, .inputFiled) {
    min-height: 3.25rem;
    max-height: 3em;
    width: min-content;
    max-width: min(100%, 90vw);
    display: inline-flex;
    justify-content: center;
    align-items: center;
    vertical-align: middle;
    text-align: center;
    text-transform: capitalize;
    white-space: nowrap;
    padding: max(0.4em, 0.4rem) max(2.2em, 2.2rem);
    font-size: var(--fs-s);
    font-weight: var(--fw-b);
    background-color: transparent;
    color: var(--txt-clr);
    border: 2px solid var(--secondary-clr);
    border-radius: var(--border-radius);
    --focus-shadow: inset 0px -0.4rem 0 var(--accent-shadow-clr);
}
.inputFiled {
    outline: 2px solid transparent;
}
.Button:has(img, svg) {
}
.Button:where(:hover, :active):not(:has(img, svg)) {
}
.Button:has(img, svg):where(:hover, :active) {
}
.Button:not(:last-child) {
    margin: 0 0 1rem 0;
}
.visually-hidden {
    position: absolute;
    position: absolute !important;
    width: 1px !important;
    height: 1px !important;
    padding: 0 !important;
    margin: -1px !important;
    overflow: hidden !important;
    clip: rect(0, 0, 0, 0) !important;
    white-space: nowrap !important;
    border: 0 !important;
}
.old-script,
.no-script {
    width: 100vw;
    height: 100vh;
    @include flex(r, c, c);
    z-index: 9999;
    position: fixed;
    padding: 0 1rem;
    text-align: center;
    background-color: #1c1e21;
    color: #d9d4ce;
    & > p {
        font-size: 18px;
        color: #d9d4ce;
    }
}
// .no-scroll {
//     height: 100vh !important;
//     overflow: hidden !important;
// }
